# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: |
    curl -L https://github.com/pivotal-cf/pivnet-cli/releases/download/v3.0.1/pivnet-linux-amd64-3.0.1 -o pivnet
    chmod u+x pivnet
  displayName: 'Download Tanzu Network CLI'
- script: ./pivnet login --api-token $(api-token)
  displayName: 'Log in to the Tanzu Network'
- script: | 
    ./pivnet download-product-files --product-slug='build-service' --release-version='1.2.1' --product-file-id=970671
    mv kp-linux-0.3.0 kp
    chmod u+x kp
  displayName: 'Download kpack cli'
- script: ./kp version
- task: Kubernetes@1
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'gke-dev'
    namespace: 'default'
    command: 'get'
    arguments: 'pods'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'
- task: Kubernetes@1
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'gke-dev'
    command: 'login'
- task: Kubernetes@1
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'gke-dev'
    command: 'config'
    arguments: 'view'